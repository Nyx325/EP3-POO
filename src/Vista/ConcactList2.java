package Vista;

import java.util.ArrayList;

import javax.swing.table.DefaultTableModel;

import Controlador.Agenda;
import Controlador.ContactLogic;
import Modelo.Contact;
import Modelo.Phone;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.FileChooserUI;

public class ConcactList2 extends javax.swing.JFrame {
    // Controlers
    private Agenda agenda;
    private ContactLogic cLogic;
    // Variables
    private JFileChooser fc;
    private boolean adding;
    private boolean cleanerTbox;
    private boolean confirmAdd;
    private boolean modifyMode;
    private boolean cleanerNamebox;
    private phoneFrame pFrame;
    private Contact lastContactSel;
    private ArrayList<Contact> lastListUsed;
    private int clickOnPhoneDone;
    private int lastPhoneIndex;

    /**
     * Creates new form ConcactList2
     */
    public ConcactList2() {
        initComponents();
        this.cLogic = new ContactLogic();
        this.agenda = new Agenda();
        agenda.sortContacts();
        this.loadContacts(agenda.getContacts());
        this.lastListUsed = agenda.getContacts();
        this.cleanerTbox = true;
        this.modifyMode = false;
        this.FilterTbox.setText("Buscar por nombre...");
        this.pFrame = new phoneFrame(this);
        this.lastContactSel = null;
        this.setLocationRelativeTo(null);
        this.AceptContactBtn.hide();
        this.CancelContactBtn.hide();
        this.adding = false;
        this.clickOnPhoneDone = 0;
        this.lastPhoneIndex = -1;
        
        this.fc = new JFileChooser();
        fc.setFileFilter(
            new FileNameExtensionFilter(
      "Im√°genes", 
       "png", 
       "jpg",
       "jpeg"
            )
        );
    }

    public Contact getLastContactSel(){
        return this.lastContactSel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contactsTable = new javax.swing.JTable();
        DeleteContactBtn = new javax.swing.JButton();
        AddContactBtn = new javax.swing.JButton();
        FilterCbox = new javax.swing.JComboBox<>();
        FilterTbox = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nameTbox = new javax.swing.JTextField();
        ageTbox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sexTbox = new javax.swing.JTextField();
        ChangePFPBtn = new javax.swing.JButton();
        PFPLabel = new javax.swing.JLabel();
        ModifyBtn = new javax.swing.JButton();
        CancelContactBtn = new javax.swing.JButton();
        AceptContactBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        phonesTable = new javax.swing.JTable();
        AddPhoneBtn = new javax.swing.JButton();
        DeleteNumberBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(41, 47, 54));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(164, 31, 19));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/images/Banner-cut-scaled2.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(224, 219, 232));

        contactsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Contactos"
            }
        ));
        contactsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                contactsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(contactsTable);

        DeleteContactBtn.setText("Eliminar");
        DeleteContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteContactBtnActionPerformed(evt);
            }
        });

        AddContactBtn.setText("Agregar");
        AddContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddContactBtnActionPerformed(evt);
            }
        });

        FilterCbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Sexo", "Edad" }));
        FilterCbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterCboxActionPerformed(evt);
            }
        });

        FilterTbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FilterTboxMouseClicked(evt);
            }
        });
        FilterTbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FilterTboxActionPerformed(evt);
            }
        });
        FilterTbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                FilterTboxKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(AddContactBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteContactBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FilterCbox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(FilterTbox)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FilterCbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FilterTbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddContactBtn)
                    .addComponent(DeleteContactBtn))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(41, 47, 54));

        jLabel2.setText("Nombre");

        nameTbox.setEditable(false);
        nameTbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameTboxMouseClicked(evt);
            }
        });

        ageTbox.setEditable(false);

        jLabel3.setText("Edad");

        jLabel4.setText("Sexo");

        sexTbox.setEditable(false);

        ChangePFPBtn.setText("Cambiar foto");
        ChangePFPBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangePFPBtnActionPerformed(evt);
            }
        });

        PFPLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Vista/images/contacto-icon.png"))); // NOI18N

        ModifyBtn.setText("Modificar");
        ModifyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyBtnActionPerformed(evt);
            }
        });

        CancelContactBtn.setText("Cancelar");
        CancelContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelContactBtnActionPerformed(evt);
            }
        });

        AceptContactBtn.setText("Aceptar");
        AceptContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AceptContactBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(PFPLabel)
                .addGap(62, 62, 62))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(ChangePFPBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ageTbox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sexTbox, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTbox)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(AceptContactBtn)
                        .addGap(18, 18, 18)
                        .addComponent(CancelContactBtn)
                        .addGap(72, 72, 72))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(ModifyBtn)
                        .addGap(122, 122, 122))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PFPLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ChangePFPBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ageTbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(sexTbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ModifyBtn)
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CancelContactBtn)
                    .addComponent(AceptContactBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(41, 47, 54));

        phonesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tipo", "Numero"
            }
        ));
        phonesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phonesTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(phonesTable);
        if (phonesTable.getColumnModel().getColumnCount() > 0) {
            phonesTable.getColumnModel().getColumn(0).setMinWidth(80);
            phonesTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            phonesTable.getColumnModel().getColumn(0).setMaxWidth(80);
        }

        AddPhoneBtn.setText("Agregar");
        AddPhoneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPhoneBtnActionPerformed(evt);
            }
        });

        DeleteNumberBtn.setText("Eliminar");
        DeleteNumberBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteNumberBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(AddPhoneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeleteNumberBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddPhoneBtn)
                    .addComponent(DeleteNumberBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void contactsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contactsTableMouseClicked
        int index = this.contactsTable.getSelectedRow();
        Contact c = lastListUsed.get(index);
        
        this.nameTbox.setText(c.getName());
        this.ageTbox.setText(c.getAge());
        this.sexTbox.setText(c.getSex());
        loadPhones(c.getPhones());
        
        this.lastContactSel = c;
        
        // Actualizar imagen
        try{
            File file = new File("./src/Vista/images/contacto-icon.png");
            Image img = ImageIO.read(file);
            Image scaledImg = img.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
            PFPLabel.setIcon(new ImageIcon(scaledImg));
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(
                null, 
                "Error al cargar la foto de perfil "+e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
        setModifyModeState(false);
    }//GEN-LAST:event_contactsTableMouseClicked

    private void FilterCboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterCboxActionPerformed
        this.cleanerTbox = true;
        switch(FilterCbox.getSelectedIndex()){
            case 0:
                FilterTbox.setText("Buscar por nombre...");
                break;
            case 1:
                 FilterTbox.setText("Buscar por Sexo...");
                 break;   
            case 2:
                FilterTbox.setText("Buscar por Edad...");
                break;
        }
    }//GEN-LAST:event_FilterCboxActionPerformed

    private void FilterTboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FilterTboxMouseClicked
        if(cleanerTbox== false)
            return;
        
        FilterTbox.setText("");
        cleanerTbox=false;
    }//GEN-LAST:event_FilterTboxMouseClicked

    private void FilterTboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FilterTboxActionPerformed
        search();
    }//GEN-LAST:event_FilterTboxActionPerformed

    private void AddPhoneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPhoneBtnActionPerformed
        if(this.lastContactSel == null){
            JOptionPane.showMessageDialog(
                null, 
                "Se debe elegir un contacto", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
            

        if(lastContactSel.getPhones().size() > 4){
            JOptionPane.showMessageDialog(
                null, 
                "No se pueden agregar m√°s n√∫meros a este contacto", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        this.pFrame.setLocationRelativeTo(null);
        this.pFrame.show();
    }//GEN-LAST:event_AddPhoneBtnActionPerformed

    private void FilterTboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FilterTboxKeyReleased
        String input =FilterTbox.getText();
        switch(FilterCbox.getSelectedIndex()){
            case 0:
                this.lastListUsed = agenda.searchName(input);
                loadContacts(lastListUsed);
                break;
            case 1:
                this.lastListUsed = agenda.searchSex(input);
                loadContacts(lastListUsed);
                break;   
            case 2:
                this.lastListUsed = agenda.searchAge(input);
                loadContacts(lastListUsed);
                break;
        }
    }//GEN-LAST:event_FilterTboxKeyReleased

    private void DeleteNumberBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteNumberBtnActionPerformed
        if(this.phonesTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(
                null, 
                "Se debe elegir un n√∫mero", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        ArrayList<Phone> pList = lastContactSel.getPhones();
        Phone p = pList.get(phonesTable.getSelectedRow());
        
        
        int response = JOptionPane.showConfirmDialog(
                this, 
                "¬øEst√°s seguro que quieres eliminar el n√∫mero "+p.getLada()+p.getNumber()+"?", 
                "Confirmaci√≥n", 
                JOptionPane.YES_NO_OPTION
        );
        
        // Si se selecciona s√≠, el valor es 0, si es no es 1, si se cierra la 
        // ventana sin elegir es -1
        if(response == 0){
            pList.remove(p);
            JOptionPane.showMessageDialog(
                    null, 
                    "Se elimin√≥ el n√∫mero correctamente", 
                    "√âxito", 
                    JOptionPane.INFORMATION_MESSAGE
            );
            this.loadPhones(pList);
        }
        
    }//GEN-LAST:event_DeleteNumberBtnActionPerformed

    private void AddContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddContactBtnActionPerformed
        this.loadPhones(new ArrayList<>());
        this.setModifyModeState(true);
        this.cleanerNamebox= true;
        this.nameTbox.setText("Nuevo contacto");
        this.ageTbox.setText("");
        this.sexTbox.setText("");
        this.adding = true;
        this.lastContactSel = new Contact();
        this.confirmAdd=true;
    }//GEN-LAST:event_AddContactBtnActionPerformed

    private void AceptContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AceptContactBtnActionPerformed
        // TODO add your handling code here:
        try{
            cLogic.check(new Contact(
                nameTbox.getText().trim(),
                 sexTbox.getText().trim(),
                 ageTbox.getText().trim()
                )
            );
            
            this.lastContactSel.setName(nameTbox.getText().trim());
            this.lastContactSel.setSex(sexTbox.getText().trim());
            this.lastContactSel.setAge(ageTbox.getText().trim());
            
            agenda.getContacts().remove(lastContactSel);
            agenda.getContacts().add(lastContactSel);
            agenda.sortContacts();

            
            int response = JOptionPane.showConfirmDialog(
                this, 
                "¬øEst√°s seguro de querer completar esta accion ", 
                "Confirmaci√≥n", 
                JOptionPane.YES_NO_OPTION
                );
            
            
            if(response == 0){
            
            
            JOptionPane.showMessageDialog(
                    null, 
                    "Se realizo la tarea con exito", 
                    "√âxito", 
                    JOptionPane.INFORMATION_MESSAGE
            );

            nameTbox.setText("");
            sexTbox.setText("");
            ageTbox.setText("");

            var model = new DefaultTableModel(new Object[]{"Tipo", "Numero"}, 0);
            this.phonesTable.setModel(model);
            this.lastContactSel = null;

            agenda.sortContacts();
            loadContacts(lastListUsed);
        }
            
        }catch(Exception e){
            System.out.println("Error: "+e.getMessage());
            System.out.println(e.getStackTrace());
            JOptionPane.showMessageDialog(
                null,
                e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_AceptContactBtnActionPerformed

    private void ModifyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyBtnActionPerformed
        if(this.lastContactSel == null){
            JOptionPane.showMessageDialog(
                null,
                "Se debe elegir contacto",
                "Error",
                JOptionPane.ERROR_MESSAGE
            );

            return;
        }

        setModifyModeState(true);
    }//GEN-LAST:event_ModifyBtnActionPerformed

    private void CancelContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelContactBtnActionPerformed
        this.setModifyModeState(false);
        this.nameTbox.setText("");
        this.ageTbox.setText("");
        this.sexTbox.setText("");
        this.lastContactSel = null;
        
        var model = new DefaultTableModel(new Object[]{"Tipo", "Numero"}, 0);
        this.phonesTable.setModel(model);
    }//GEN-LAST:event_CancelContactBtnActionPerformed

    private void DeleteContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteContactBtnActionPerformed
        if(this.contactsTable.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(
                null, 
                "Se debe elegir un contacto", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            
            return;
        }
        
        Contact c = lastListUsed.get(contactsTable.getSelectedRow());
        
        int response = JOptionPane.showConfirmDialog(
                this, 
                "¬øEst√°s seguro que quieres eliminar a "+c.getName()+"?", 
                "Confirmaci√≥n", 
                JOptionPane.YES_NO_OPTION
        );
        
        if(response == 0){
            agenda.getContacts().remove(c);
            lastListUsed.remove(c);
            JOptionPane.showMessageDialog(
                    null, 
                    "Se elimin√≥ el contacto correctamente", 
                    "√âxito", 
                    JOptionPane.INFORMATION_MESSAGE
            );

            nameTbox.setText("");
            sexTbox.setText("");
            ageTbox.setText("");

            var model = new DefaultTableModel(new Object[]{"Tipo", "Numero"}, 0);
            this.phonesTable.setModel(model);
            this.lastContactSel = null;

            agenda.sortContacts();
            loadContacts(lastListUsed);
        }
    }//GEN-LAST:event_DeleteContactBtnActionPerformed

    private void ChangePFPBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangePFPBtnActionPerformed
        int selection = fc.showOpenDialog(this);
        
        if(selection != JFileChooser.APPROVE_OPTION){
            return;
        }
        
        try{
            File file = fc.getSelectedFile();
            Image img = ImageIO.read(file);
            Image scaledImg = img.getScaledInstance(200, 200, Image.SCALE_SMOOTH);
            PFPLabel.setIcon(new ImageIcon(scaledImg));
        }
        catch(IOException e){
            JOptionPane.showMessageDialog(
                null, 
                "Error al cargar la foto de perfil "+e.getMessage(), 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_ChangePFPBtnActionPerformed

    private void nameTboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameTboxMouseClicked
       if(cleanerNamebox== false)
            return;
        
        nameTbox.setText("");
        cleanerNamebox=false;
    }//GEN-LAST:event_nameTboxMouseClicked

    private void phonesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phonesTableMouseClicked

    }//GEN-LAST:event_phonesTableMouseClicked


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConcactList2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConcactList2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConcactList2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConcactList2.class.getName()).log(java.util.logging.Level.SEVERE, null,
                    ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConcactList2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AceptContactBtn;
    private javax.swing.JButton AddContactBtn;
    private javax.swing.JButton AddPhoneBtn;
    private javax.swing.JButton CancelContactBtn;
    private javax.swing.JButton ChangePFPBtn;
    private javax.swing.JButton DeleteContactBtn;
    private javax.swing.JButton DeleteNumberBtn;
    private javax.swing.JComboBox<String> FilterCbox;
    private javax.swing.JTextField FilterTbox;
    private javax.swing.JButton ModifyBtn;
    private javax.swing.JLabel PFPLabel;
    private javax.swing.JTextField ageTbox;
    private javax.swing.JTable contactsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameTbox;
    private javax.swing.JTable phonesTable;
    private javax.swing.JTextField sexTbox;
    // End of variables declaration//GEN-END:variables

    private void search(){
        String input =FilterTbox.getText();
        switch(FilterCbox.getSelectedIndex()){
            case 0:
                
                loadContacts(agenda.searchName(input));
                break;
            case 1:
                 loadContacts(agenda.searchSex(input));
                 break;   
            case 2:
                loadContacts(agenda.searchAge(input));
                break;
        }
    }
    
    private void loadContacts(ArrayList<Contact> list){
        DefaultTableModel model = new DefaultTableModel(new Object[]{"Contactos"}, 0);

        for(Contact c : list){
            Object[] newRow = {c.getName()};
            model.addRow(newRow);
        }

        this.contactsTable.setModel(model);
    }

    public void loadPhones(ArrayList<Phone> phones){
        var model = new DefaultTableModel(new Object[]{"Tipo", "Numero"}, 0);

        for(Phone p : phones){
            Object[] newRow = {p.getTipo(), p.getLada()+" "+p.getNumber()};
            model.addRow(newRow);
        }

        this.phonesTable.setModel(model);
    }

    /**
     * @param state verdadero es igual a tbox editables y leyenda
     * aceptar en boton, falso es igual a tbox no editables y leyenda
     * modificar
     */
    private void setModifyModeState(boolean state){
        modifyMode = state;
        
        if (state) {
            ModifyBtn.hide();
            AceptContactBtn.show();
            CancelContactBtn.show();
            nameTbox.setEditable(true);
            sexTbox.setEditable(true);
            ageTbox.setEditable(true);
        }
        else{
            ModifyBtn.show();
            AceptContactBtn.hide();
            CancelContactBtn.hide();
            nameTbox.setEditable(false);
            sexTbox.setEditable(false);
            ageTbox.setEditable(false);
        }
    }
}
